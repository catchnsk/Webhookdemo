server:
  port: 8080
  servlet:
    context-path: /api

spring:
  application:
    name: webhook-management
  
  datasource:
    url: jdbc:sqlserver://localhost:1433;databaseName=webhook_db;encrypt=true;trustServerCertificate=true
    username: ${DB_USERNAME:sa}
    password: ${DB_PASSWORD:YourPassword123}
    driver-class-name: com.microsoft.sqlserver.jdbc.SQLServerDriver
    
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.SQLServerDialect
        format_sql: true
    defer-datasource-initialization: true
    
  sql:
    init:
      mode: always
      
  security:
    user:
      name: admin
      password: password
      roles: ADMIN

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics
  endpoint:
    health:
      show-details: always

logging:
  level:
    com.webhookdemo: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE

# Kafka Configuration
spring:
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.add.type.headers: false
    consumer:
      group-id: webhook-consumer-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.webhookdemo.dto"
        spring.json.use.type.headers: false
        spring.json.value.default.type: com.webhookdemo.dto.WebhookNotificationDto
    listener:
      ack-mode: manual_immediate

# Kafka Topics
kafka:
  topics:
    webhook-events: webhook-events
    webhook-notifications: webhook-notifications
    webhook-retries: webhook-retries